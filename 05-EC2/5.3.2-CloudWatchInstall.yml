AWSTemplateFormatVersion: 2010-09-09
Description: Dave Merrill Create EC2 Instances

Resources:
  DavidMerrillLaunchTemplateCloudWatch:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0ecc74eca1d66d8a6
        InstanceType: t2.micro
        SecurityGroupIds:
          - sg-085d863a9aac774c2
      LaunchTemplateName: David-Merrill-CF-CloudWatch-LT
      VersionDescription: 1.0

  ##====CREATE EC2 INSTANCE====##
  DavidMerrillsInstanceCloudWatch:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          full_install:
          - install_and_enable_cfn_hup
        install_and_enable_cfn_hup:
          files:
            "/etc/cfn/cfn-hup.conf":
              content:
                Fn::Join:
                - ''
                - - "[main]\n"
                  - stack=
                  - Ref: AWS::StackId
                  - "\n"
                  - region=
                  - Ref: AWS::Region
                  - "\n"
              mode: '000400'
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content:
                Fn::Join:
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - 'triggers=post.update
                    '
                  - 'path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                    '
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - "         --stack "
                  - Ref: AWS::StackName
                  - "         --resource EC2Instance "
                  - "         --configsets full_install "
                  - "         --region "
                  - Ref: AWS::Region
                  - "\n"
                  - 'runas=root
                    '
            "/lib/systemd/system/cfn-hup.service":
              content:
                Fn::Join:
                - ''
                - - "[Unit]\n"
                  - "Description=cfn-hup daemon\n\n"
                  - "[Service]\n"
                  - 'Type=simple
                    '
                  - "\n"
                  - 'ExecStart=/opt/aws/bin/cfn-hup
                    '
                  - "Restart=always\n\n"
                  - "[Install]\n"
                  - WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
            03download_cwagent:
              command: curl -o /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb
            04install_cwagent:
              command: dpkg -i -E /tmp/amazon-cloudwatch-agent.deb
            05start_cw_service:
              command: amazon-cloudwatch-agent-ctl -a start
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref DavidMerrillLaunchTemplateCloudWatch
        Version: 1
      KeyName: david-merrill-manual-key
      SubnetId: subnet-0907598e0489a5ac7
      IamInstanceProfile: !Ref DavidMerrillsInstanceProfile
      Tags:
        - Key: Name
          Value: David-Merrill-EC2-CloudWatch
      UserData:
        # This script below is to install AmazonCloudWatchAgent, restart AmazonCloudWatchAgent and tell the result to cloudformation.
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -o /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb
          dpkg -i -E /tmp/amazon-cloudwatch-agent.deb
          amazon-cloudwatch-agent-ctl -a start
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'apt-get update -y
              '
            - "\n"
            - 'mkdir -p /opt/aws/bin
              '
            - "\n"
            - 'wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
              '
            - "\n"
            - 'python3 -m easy_install --script-dir /opt/aws/bin aws-cfn-bootstrap-py3-latest.tar.gz
              '
            - "\n"
            - "/opt/aws/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource LinuxInstance "
            - "         --configsets full_install "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "/opt/aws/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource LinuxInstance "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT30M"

  ###====CREATE ELASTIC IP====##
  DavidMerrillsElasticIPCloudWatch:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref DavidMerrillsInstanceCloudWatch
      Tags:
        - Key: Name
          Value: David-Merrill-EIP-CW

  DavidMerrillsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - Ref: "DavidMerrillsCloudWatchRole"

  DavidMerrillsCloudWatchRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      RoleName: "DavidMerrill-CloudWatch-Role"
      Description: "Role created for lab 5.3.2"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

#  PolicyForCloudWatch:
#    Type: "AWS::IAM::Policy"
#    Properties:
#      PolicyName: "Cloudwatchinlineforlab5"
#      PolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Action:
#              - cloudwatch:PutMetricData
#              - ec2:DescribeVolumes
#              - ec2:DescribeTags
#              - logs:PutLogEvents
#              - logs:DescribeLogStreams
#              - logs:DescribeLogGroups
#              - logs:CreateLogStream
#              - logs:CreateLogGroup
#            Resource: "*"
#          - Effect: Allow
#            Action:
#              - ssm:GetParameter
#            Resource: arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*
#      Roles:
#        - Ref: "DavidMerrillsCloudWatchRole"

###====OUTPUT EC2, SECURITY GROUPS, ELASTIC IP====##
#Outputs:
#  EC2IDOutput:
#    Description: Output ID of VPC
#    Value: !Ref DavidMerrillsInstanceCloudWatch
#    Export:
#      Name: DavidMerrills-CloudWatch-EC2ID
#  EC2PrivateIp:
#    Description: Output ID of Subnet
#    Value: !GetAtt
#      - DavidMerrillsInstanceCloudWatch
#      - PrivateIp
#    Export:
#      Name: DavidMerrills-CloudWatch-EC2PrivateIP
#  EC2ElasticIP:
#    Description: Output ElasticIP Address
#    Value: !Ref DavidMerrillsElasticIPCloudWatch
#    Export:
#      Name: DavidMerrills-CloudWatch-ElasticIP

#aws cloudformation create-stack \
#  --stack-name DavidMerrill-CloudWatch-Install-5-3 \
#  --template-body file://5.3.2-CloudWatchInstall.yml \
#  --profile labs-mfa \
#  --region us-west-2 \
#  --capabilities CAPABILITY_NAMED_IAM