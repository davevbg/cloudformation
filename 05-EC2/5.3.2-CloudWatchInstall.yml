AWSTemplateFormatVersion: 2010-09-09
Description: Dave Merrill Create EC2 Instances

Resources:
  DavidMerrillLaunchTemplateCloudWatch:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-094125af156557ca2
        InstanceType: t2.micro
        SecurityGroupIds:
          - sg-085d863a9aac774c2
      LaunchTemplateName: David-Merrill-CF-CloudWatch-LT
      VersionDescription: 1.0

  ##====CREATE EC2 INSTANCE====##
  DavidMerrillsInstanceCloudWatch:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_setupCfnHup
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
          UpdateEnvironment:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
        # Definition of json configuration of AmazonCloudWatchAgent, you can change the configuration below.
        02_config-amazon-cloudwatch-agent:
          files:
            '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json':
              content: !Sub |
                {
                  "metrics": {
                    "append_dimensions": {
                      "AutoScalingGroupName": "${!aws:AutoScalingGroupName}",
                      "ImageId": "${!aws:ImageId}",
                      "InstanceId": "${!aws:InstanceId}",
                      "InstanceType": "${!aws:InstanceType}"
                    },
                    "metrics_collected": {
                      "mem": {
                        "measurement": [
                          "mem_used_percent"
                        ]
                      },
                      "swap": {
                        "measurement": [
                          "swap_used_percent"
                        ]
                      }
                    }
                  }
                }
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        03_restart_amazon-cloudwatch-agent:
          commands:
            01_stop_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02_start_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
        # Cfn-hup setting, it is to monitor the change of metadata.
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init to restart the AmazonCloudWatchAgent.
        01_setupCfnHup:
          files:
             '/etc/cfn/cfn-hup.conf':
               content: !Sub |
                 [main]
                 stack=${AWS::StackId}
                 region=${AWS::Region}
                 interval=1
               mode: '000400'
               owner: root
               group: root
             '/etc/cfn/hooks.d/amazon-cloudwatch-agent-auto-reloader.conf':
               content: !Sub |
                 [cfn-auto-reloader-hook]
                 triggers=post.update
                 path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent
                 action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets UpdateEnvironment
                 runas=root
               mode: '000400'
               owner: root
               group: root
             "/lib/systemd/system/cfn-hup.service":
                content: !Sub |
                  [Unit]
                  Description=cfn-hup daemon
                  [Service]
                  Type=simple
                  ExecStart=/opt/aws/bin/cfn-hup
                  Restart=always
                  [Install]
                  WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: !Sub |
                systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: !Sub |
                systemctl start cfn-hup.service
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref DavidMerrillLaunchTemplateCloudWatch
        Version: 1
      KeyName: david-merrill-manual-key
      SubnetId: subnet-0907598e0489a5ac7
      Tags:
        - Key: Name
          Value: David-Merrill-EC2-CloudWatch
      UserData:
        # This script below is to install AmazonCloudWatchAgent, restart AmazonCloudWatchAgent and tell the result to cloudformation.
        Fn::Base64: !Sub |
           #!/bin/bash
#           rpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
           /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default
           /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT30M"

  ###====CREATE ELASTIC IP====##
  DavidMerrillsElasticIPCloudWatch:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref DavidMerrillsInstanceCloudWatch
      Tags:
        - Key: Name
          Value: David-Merrill-EIP-CW

###====OUTPUT EC2, SECURITY GROUPS, ELASTIC IP====##
#Outputs:
#  EC2IDOutput:
#    Description: Output ID of VPC
#    Value: !Ref DavidMerrillsInstanceCloudWatch
#    Export:
#      Name: DavidMerrills-CloudWatch-EC2ID
#  EC2PrivateIp:
#    Description: Output ID of Subnet
#    Value: !GetAtt
#      - DavidMerrillsInstanceCloudWatch
#      - PrivateIp
#    Export:
#      Name: DavidMerrills-CloudWatch-EC2PrivateIP
#  EC2ElasticIP:
#    Description: Output ElasticIP Address
#    Value: !Ref DavidMerrillsElasticIPCloudWatch
#    Export:
#      Name: DavidMerrills-CloudWatch-ElasticIP

#aws cloudformation create-stack \
#  --stack-name DavidMerrill-CloudWatch-Install-5-3 \
#  --template-body file://5.3.2-CloudWatchInstall.yml \
#  --profile labs-mfa \
#  --region us-west-2